syntax = "proto3";
package VirtualPaper.Grpc.Service.WallpaperControl;
import "google/protobuf/empty.proto";

service WallpaperControlService {
	rpc GetCoreStats (google.protobuf.Empty) returns (GetCoreStatsResponse);
	
	rpc CloseAllWallpapers(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc CloseWallpaperMonitor(CloseWallpaperMonitorRequest) returns (google.protobuf.Empty);
	
	rpc PreviewWallpaper (PreviewWallpaperRequest) returns (google.protobuf.Empty);
	rpc SetWallpaper (SetWallpaperRequest) returns (SetWallpaperResponse);

	rpc RestartAllWallpaper (google.protobuf.Empty) returns (google.protobuf.Empty);
    
    rpc SendMessageWallpaper(WallpaperMessageRequest) returns (google.protobuf.Empty);
    
    rpc TakeScreenshot(WallpaperScreenshotRequest) returns (google.protobuf.Empty);
	
	rpc GetWallpapers (google.protobuf.Empty) returns (stream GetWallpapersResponse);
	rpc GetWallpaper (GetWallpaperRequest) returns (WpMetaData);

	rpc CreateWallpaper (CreateWallpaperRequest) returns (WpMetaData);

	rpc ChangeWallpaperLayoutFolrderPath (ChangePathRequest) returns (google.protobuf.Empty);
    
	rpc SubscribeWallpaperChanged (google.protobuf.Empty) returns (stream google.protobuf.Empty);
    rpc SubscribeWallpaperError (google.protobuf.Empty) returns (stream WallpaperErrorResponse);
    rpc SubscribeUpdateWallpaper (google.protobuf.Empty) returns (stream UpdateWallpaperResponse);          
}

message GetCoreStatsResponse {
	string base_directory = 1;
	string assembly_version = 2;
}

message CloseWallpaperMonitorRequest {
    string monitor_id = 1;
}

message PreviewWallpaperRequest {
	WpMetaData wp_meta_data = 1;
}

message SetWallpaperRequest {
  string folder_path = 1;
  string monitor_id = 2;
  RunningState running_state = 3;
}

message SetWallpaperResponse {
	bool is_worked = 1;
	string msg = 2;
}

message WallpaperMessageRequest {
	string monitor_id = 1;
	string folder_path = 2;
	string msg = 3;
}

message WallpaperScreenshotRequest {
	string monitor_id = 1;
	string save_path = 2;
}

message GetWallpaperRequest {
	string folder_path = 1;
	string file_path = 2;
}

message CreateWallpaperRequest {
	string folder_path = 1;
	string file_path = 2;
	WallpaperType type = 3;
}

message ChangePathRequest {
	string previous_dir = 1;
	string new_dir = 2;
}

message GetWallpapersResponse {
  string folder_path = 1;
  MonitorData monitor = 2;
  string wp_customize_path_using = 3;
  string thumbnail_path = 4;
  WallpaperType type = 5;
}

message WallpaperErrorResponse {
	ErrorType error = 1;
	string error_msg = 2;
}

message UpdateWallpaperResponse {
	UpdateWallpaperState state_ = 1;
	string folder_path = 2;
	string title = 3;
	string description = 4;
	string authors = 5;
	string thumbnail_path_ = 7;
}

message WpMetaData {
	string virtual_paper_uid = 1;
	ApplicationInfo app_info = 2;
	string title = 3;
    string desc  = 4;
    string authors = 5;
	string publish_date = 6;
    WallpaperType type = 7;
    string partition = 8;
    string tags = 9;	
        
    string folder_path = 10;
    string file_path = 11;
    string wp_customize_path = 14;
    string wp_customize_path_using = 15;
    string wp_customize_path_tmp = 16;
	string thumbnail_path = 17;

	string resolution = 18;
	string aspect_Ratio = 19;
	string file_size = 20;
	string file_extension = 21;
	
	repeated string arguments = 22;
}

message MonitorData {
  string device_id = 1;
  string device_name = 2;
  string display_name = 3;
  int32 h_monitor = 4;
  int32 index = 5;
  bool is_primary = 6;
  Rectangle bounds = 7;
  Rectangle working_area = 8;
}

message Rectangle {
	int32 x = 1;
	int32 y = 2;
	int32 width = 3;
	int32 height = 4;
	int32 bottom = 5;
	int32 left = 6;
	int32 right = 7;
	int32 top = 8;
}

message ApplicationInfo {
	string app_name = 1;
    string app_version = 2;
}

enum ErrorType {
	workerw = 0;
	wallpaper_not_found = 1;
	wallpaper_plugin_fail = 2;
	wallpaper_plugin_not_found = 3;
	wallpaper_plugin_media_codec_missing = 4;
	wallpaper_not_allowed = 5;
	screen_not_found = 6;
	general = 7;
}

enum WallpaperType {
	app = 0;
	web = 1;
	webaudio = 2;
	bizhawk = 3;
	unity = 4;
	unityaudio = 5;
	godot = 6;	
	gif = 7;
	picture = 8;
	video = 9;
}

enum RunningState {
	processing = 0;
	ready = 1;
	cmdImport = 2;
	multiImport = 3;
	edit = 4;
}

enum UpdateWallpaperState {
	changed = 0;
	remove = 1;
    done = 2;
}
