<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Preview_DataLoading" xml:space="preserve">
    <value>Loading data, please wait</value>
  </data>
  <data name="Preview_Title" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Virtual_Paper_isRunning" xml:space="preserve">
    <value>Virtual Paper is running in the background</value>
  </data>
  <data name="Virtual_Paper_isRunning_Greetings" xml:space="preserve">
    <value>Have a nice day!</value>
  </data>
  <data name="WpControl_VirtualPaperExceptionWorkerWSetupFail" xml:space="preserve">
    <value>A few settings are required for it to work:
1. Press Win + R to open the operation.
2. Enter SystemPropertiesPerformance.exe in "Run" and click "OK" to open the performance options.
3. Enable/check "Animation controls and elements within the window" (uncheck if already checked) and apply.
4. Close the window by clicking Apply and then OK.
If it still doesn't work, shut down and restart or reboot the system.(Doesn't work in some Windows 10 preview versions)</value>
  </data>
  <data name="AppUpdater_Update_ExceptionAppUpdateFail" xml:space="preserve">
    <value>Update failed; please try downloading the installer manual update from the following address:
https://github.com/PaperHammer/VirtualPaper/releases</value>
  </data>
  <data name="AppUpdater_Update_Text_BtnDownload" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="AppUpdater_Update_Text_BtnInstall" xml:space="preserve">
    <value>Installation</value>
  </data>
  <data name="Systray_TextCloseAllWallpapers" xml:space="preserve">
    <value>Close all wallpapers</value>
  </data>
  <data name="Systray_TextCustomizeWallpaper" xml:space="preserve">
    <value>Customize your wallpaper effects</value>
  </data>
  <data name="Systray_TextDEBubble" xml:space="preserve">
    <value>Bubble</value>
  </data>
  <data name="Systray_TextDENone" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="Systray_TextDynamicEffect" xml:space="preserve">
    <value>Animation</value>
  </data>
  <data name="Systray_TextExit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Systray_TextIsOnScrSaver" xml:space="preserve">
    <value>Enable screensaver</value>
  </data>
  <data name="Systray_TextIsRunningLock" xml:space="preserve">
    <value>Show login screen when restoring</value>
  </data>
  <data name="Systray_TextOpenApp" xml:space="preserve">
    <value>Open the main UI</value>
  </data>
  <data name="Systray_TextOpenScrSaverSet" xml:space="preserve">
    <value>Screensaver</value>
  </data>
  <data name="Systray_TextPauseWallpapers" xml:space="preserve">
    <value>Pause all wallpapers</value>
  </data>
  <data name="Systray_TextReportBug" xml:space="preserve">
    <value>Report bug</value>
  </data>
  <data name="UIRunnerService_Error" xml:space="preserve">
    <value>Incorrect</value>
  </data>
  <data name="UIRunnerService_VirtualPaperExceptionGeneral" xml:space="preserve">
    <value>An error occurred, try restarting the program to fix the problem. If this happens more than once, please report the bug or contact the developer and re-download</value>
  </data>
  <data name="WpControl_TextFileNotFound" xml:space="preserve">
    <value>Unable to find target file</value>
  </data>
  <data name="AppUpdater_Propt" xml:space="preserve">
    <value>Prompt</value>
  </data>
  <data name="AppUpdater_TextError" xml:space="preserve">
    <value>Incorrect</value>
  </data>
  <data name="AppUpdater_Update_DescriptionCancelQuestion" xml:space="preserve">
    <value>Closing the window will terminate the download, do you want to continue?</value>
  </data>
  <data name="WndProcMsg_DescExplorerCrash" xml:space="preserve">
    <value>A serious error has occurred
Windows Explorer restarted twice in the last 30 seconds!This could be a conflict between Virtual Paper and Windows or other desktop personalization software.To avoid more problems, all wallpapers have been terminated.</value>
  </data>
  <data name="Find_New_Verison" xml:space="preserve">
    <value>Detect a newer version</value>
  </data>
  <data name="Update_WindowTitle" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="WndProcMsg_TextError" xml:space="preserve">
    <value>Incorrect</value>
  </data>
  <data name="WndProcMsg_TitleAppName" xml:space="preserve">
    <value>Virtual Paper</value>
  </data>
  <data name="WpUtils_TextFileOpenFailed" xml:space="preserve">
    <value>Destination file may be corrupted</value>
  </data>
</root>